{"version":3,"sources":["ngx-airtable.module.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAA,cAAE,EAAoC,QAAA,EAAU,QAAA,EAAU,QAAA,EAAS,MAAM,eAAA,CAAgB;AAEhG,OAAO,EAAA,eAAE,EAAe,MAAM,kBAAA,CAAmB;AACjD,OAAO,EAAA,IAAE,EAAI,MAAM,eAAA,CAAgB;AAEnC,MAAM,CAAC,IAAM,UAAA,GAAa,EAAA,CAAG;AAE7B,MAAM,CAAC,IAAM,iBAAA,GAAkD,IAAI,cAAA,CAA4B,cAAE,CAAc,CAAC;AAEhH,MAAM,iCAAiC,YAAc,EAAc,IAAM;IACvE,MAAM,CAAC,IAAI,eAAA,CAAgB,YAAC,EAAa,IAAA,CAAK,CAAC;AACjD,CAAC;AAGD;IAsBE,2BAAc,YAA+B;QAC3C,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;QAC1F,CAAC;IACH,CAAC;IAxBM,yBAAO,GAAd,UAAe,MAAoB;QACjC,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,QAAQ,EAAE,MAAM;iBACjB;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,sBAAsB;oBAClC,IAAI,EAAE;wBACJ,iBAAiB;wBACjB,IAAI;qBACL;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IAkBH,wBAAC;AAAD,CAtCA,AAsCC;;AAXM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,EAAE;gBACX,YAAY,EAAE,CAAC,UAAU,CAAC;gBAC1B,OAAO,EAAE,CAAC,UAAU,CAAC;aACtB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;CAChF,EAF6F,CAE7F,CAAC;AAGF,OAPO,EAAA,eAAE,EAAe,CAAC","file":"ngx-airtable.module.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by bohoffi on 29.05.2017.\r\n */\r\nimport {InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {ModuleConfig} from './interfaces';\r\nimport {AirtableService} from './services/index';\r\nimport {Http} from '@angular/http';\r\n\r\nexport const COMPONENTS = [];\r\n\r\nexport const ModuleConfigToken: InjectionToken<ModuleConfig> = new InjectionToken<ModuleConfig>('moduleConfig');\r\n\r\nexport function provideAirTableService(moduleConfig: ModuleConfig, http: Http): AirtableService {\r\n  return new AirtableService(moduleConfig, http);\r\n}\r\n\r\n\r\nexport class NgxAirtableModule {\r\n\r\n  static forRoot(config: ModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxAirtableModule,\r\n      providers: [\r\n        {\r\n          provide: ModuleConfigToken,\r\n          useValue: config\r\n        },\r\n        {\r\n          provide: AirtableService,\r\n          useFactory: provideAirTableService,\r\n          deps: [\r\n            ModuleConfigToken,\r\n            Http\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(  parentModule: NgxAirtableModule) {\r\n    if (parentModule) {\r\n      throw new Error('NgxAirtableModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [],\r\n  declarations: [COMPONENTS],\r\n  exports: [COMPONENTS]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxAirtableModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\r\n\r\nexport {AirtableService};\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}