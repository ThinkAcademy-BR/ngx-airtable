{"version":3,"sources":["ngx-airtable.module.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAA,cAAE,EAAoC,QAAA,EAAU,QAAA,EAAU,QAAA,EAAS,MAAM,eAAA,CAAgB;AAChG,OAAO,EAAA,YAAE,EAAY,MAAM,iBAAA,CAAkB;AAC7C,OAAO,EAAA,IAAE,EAAI,MAAM,eAAA,CAAgB;AAGnC,OAAO,EAAA,gBAAE,EAAiB,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,KAAA,EAAM,MAAM,mBAAA,CAAoB;AAGjF,IAAM,mBAAA,GAA6D,IAAI,cAAA,CAAqC,qBAAE,CAAqB,CAAC;AAEpI,MAAM,CAAC,IAAM,gBAAA,GAAmB;IAC9B,OAAO,EAAE,QAAA;IACT,UAAU,EAAE,gBAAA;IACZ,IAAI,EAAE,CAAA,IAAE,EAAK,mBAAA,CAAoB;CAClC,CAAC;AAGF;IAcE,2BAAc,YAA+B;QAC3C,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;QAC1F,CAAC;IACH,CAAC;IAhBM,yBAAO,GAAd,UAAe,MAA8B;QAC3C,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mBAAmB;oBAC5B,QAAQ,EAAE,MAAM;iBACjB;aACF;SACF,CAAC;IACJ,CAAC;IAmBH,wBAAC;AAAD,CA/BA,AA+BC;;AAZM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,SAAS,EAAE,CAAC,gBAAgB,CAAC;aAC9B,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;CAChF,EAF6F,CAE7F,CAAC;AAGF,OAPO,EAAA,QAAE,EAAS,IAAA,EAAM,KAAA,EAAO,KAAA,EAAmC,CAAC","file":"ngx-airtable.module.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by bohoffi on 29.05.2017.\r\n */\r\nimport {InjectionToken, ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Http} from '@angular/http';\r\n\r\nimport {AirtableConfiguration, SelectParams} from './interfaces';\r\nimport {_airtableFactory, Airtable, Base, Query, Table} from './node-port/index';\r\nimport {SortDirection} from './types';\r\n\r\nconst AirtableConfigToken: InjectionToken<AirtableConfiguration> = new InjectionToken<AirtableConfiguration>('globalConfiguration');\r\n\r\nexport const AirtableProvider = {\r\n  provide: Airtable,\r\n  useFactory: _airtableFactory,\r\n  deps: [Http, AirtableConfigToken]\r\n};\r\n\r\n\r\nexport class NgxAirtableModule {\r\n\r\n  static forRoot(config?: AirtableConfiguration): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxAirtableModule,\r\n      providers: [\r\n        {\r\n          provide: AirtableConfigToken,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(  parentModule: NgxAirtableModule) {\r\n    if (parentModule) {\r\n      throw new Error('NgxAirtableModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [AirtableProvider]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgxAirtableModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\r\n\r\nexport {Airtable, Base, Table, Query, SelectParams, SortDirection};\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}