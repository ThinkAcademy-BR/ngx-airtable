{"version":3,"sources":["AirtableService.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,IAAE,EAAc,MAAM,eAAA,CAAgB;AAE7C,OAAO,uBAAA,CAAwB;AAG/B,OAAO,EAAA,iBAAE,EAAiB,MAAM,oBAAA,CAAqB;AAGrD;IAEE,yBAAoB,OAAqB,EACrB,KAAW;QADX,YAAO,GAAP,OAAO,CAAc;QACrB,UAAK,GAAL,KAAK,CAAM;IAC/B,CAAC;IAED,6BAAG,GAAH,UAAI,KAAa;QAEf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,IAAI,KAAK,CAAC,0EAAwE,KAAK,MAAG,CAAC,CAAC;QACpG,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK;aACd,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAC1B,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IAClD,CAAC;IAEO,sCAAY,GAApB,UAAqB,KAAa;QAAlC,iBAMC;QALC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aAClC,IAAI,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,KAAK,KAAK,EAAf,CAAe,CAAC;eACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;iBAChC,GAAG,CAAC,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAA1B,CAA0B,CAAC;iBAClD,IAAI,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,KAAK,KAAK,EAAf,CAAe,CAAC,CAAC;IAChD,CAAC;IAEO,mCAAS,GAAjB,UAAkB,KAAa;QAC7B,MAAM,CAAC,KAAG,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,SAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,iBAAY,IAAI,CAAC,OAAO,CAAC,MAAQ,CAAC;IAC1H,CAAC;IAEO,iDAAuB,GAA/B,UAAgC,KAAa;QAA7C,iBAUC;QATC,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,KAAK,KAAK,EAAf,CAAe,CAAC,CAAC;QAE/F,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aACpC,GAAG,CAAC,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAA1B,CAA0B,CAAC;aAClD,IAAI,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,KAAK,KAAK,EAAf,CAAe,CAAC,CAAC;IAC9C,CAAC;IASH,sBAAC;AAAD,CAhDA,AAgDC;;AARM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA;IAC9F,IAAI;IACJ,EAAC,IAAI,EAAE,IAAI,GAAG;CACb,EAH6F,CAG7F,CAAC","file":"AirtableService.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by bohoffi on 29.05.2017.\r\n */\r\nimport {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {ModuleConfig} from '../interfaces';\r\nimport {AIRTABLE_BASE_URL} from '../utils/constants';\r\n\r\n\r\nexport class AirtableService {\r\n\r\n  constructor(private _config: ModuleConfig,\r\n              private _http: Http) {\r\n  }\r\n\r\n  get(table: string): Observable<any> {\r\n\r\n    if (!this._checkConfig(table)) {\r\n      throw new Error(`There is no configured table (neither alias or value) with the name '${table}'`);\r\n    }\r\n\r\n    return this._http\r\n      .get(this._buildUrl(table))\r\n      .map((response: Response) => response.json());\r\n  }\r\n\r\n  private _checkConfig(table: string): boolean {\r\n    return Object.keys(this._config.tables)\r\n        .some((alias: string) => alias === table)\r\n      || Object.keys(this._config.tables)\r\n        .map((alias: string) => this._config.tables[alias])\r\n        .some((value: string) => value === table);\r\n  }\r\n\r\n  private _buildUrl(table: string): string {\r\n    return `${AIRTABLE_BASE_URL}${this._config.base}/${this._getTableByAliasOrValue(table)}?api_key=${this._config.apiKey}`;\r\n  }\r\n\r\n  private _getTableByAliasOrValue(table: string): string | undefined {\r\n    const matchedAlias = Object.keys(this._config.tables).find((alias: string) => alias === table);\r\n\r\n    if (!!matchedAlias) {\r\n      return this._config.tables[table];\r\n    }\r\n\r\n    return Object.keys(this._config.tables)\r\n      .map((alias: string) => this._config.tables[alias])\r\n      .find((value: string) => value === table);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\nnull,\n{type: Http, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}