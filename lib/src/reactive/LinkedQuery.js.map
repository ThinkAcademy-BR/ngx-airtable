{"version":3,"sources":["LinkedQuery.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,OAAO,EAAC,KAAK,EAAC,MAAM,oBAAoB,CAAC;AAIzC,OAAO,EAAC,aAAa,EAAC,MAAM,SAAS,CAAC;AAEtC;IAAiC,+BAAK;IAEpC,qBAAY,MAAoB,EAAU,KAAY,EAAU,KAAa;QAA7E,YACE,kBAAM,MAAM,EAAE,KAAK,CAAC,SACrB;QAFyC,WAAK,GAAL,KAAK,CAAO;QAAU,WAAK,GAAL,KAAK,CAAQ;;IAE7E,CAAC;IAED,+BAAS,GAAT;QAAA,iBAGC;QAFC,MAAM,CAAC,iBAAM,SAAS,WAAE;aACrB,GAAG,CAAC,UAAC,OAAc,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAlD,CAAkD,CAAC,EAAzE,CAAyE,CAAC,CAAC;IACxG,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAGC;QAFC,MAAM,CAAC,iBAAM,QAAQ,WAAE;aACpB,GAAG,CAAC,UAAC,OAAc,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAlD,CAAkD,CAAC,EAAzE,CAAyE,CAAC,CAAC;IACxG,CAAC;IAED,yBAAG,GAAH;QAAA,iBAGC;QAFC,MAAM,CAAC,iBAAM,GAAG,WAAE;aACf,GAAG,CAAC,UAAC,OAAc,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAlD,CAAkD,CAAC,EAAzE,CAAyE,CAAC,CAAC;IACxG,CAAC;IACH,kBAAC;AAAD,CApBA,AAoBC,CApBgC,KAAK,GAoBrC","file":"LinkedQuery.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by bohoffi on 02.06.2017.\r\n */\r\nimport {Query} from '../node-port/query';\r\nimport {Link, SelectParams} from '../interfaces';\r\nimport {Table} from '../node-port/table';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {_extendLinked} from './utils';\r\n\r\nexport class LinkedQuery extends Query {\r\n\r\n  constructor(params: SelectParams, private table: Table, private links: Link[]) {\r\n    super(params, table);\r\n  }\r\n\r\n  firstPage(): Observable<any> {\r\n    return super.firstPage()\r\n      .map((records: any[]) => records.map(record => _extendLinked(record, this.links, this.table.base)));\r\n  }\r\n\r\n  eachPage(): Observable<any> {\r\n    return super.eachPage()\r\n      .map((records: any[]) => records.map(record => _extendLinked(record, this.links, this.table.base)));\r\n  }\r\n\r\n  all(): Observable<any> {\r\n    return super.all()\r\n      .map((records: any[]) => records.map(record => _extendLinked(record, this.links, this.table.base)));\r\n  }\r\n}\r\n"]}