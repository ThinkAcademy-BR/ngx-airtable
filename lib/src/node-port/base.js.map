{"version":3,"sources":["base.ts"],"names":[],"mappings":"AAKA,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAC;AAE9B;IAKE,cAAY,MAAc,EAAE,QAAkB;QAC5C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACvD,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,oBAAK,GAAL,UAAM,YAA0B;QAC9B,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,sBAAI,wBAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,0BAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IACH,WAAC;AAAD,CAzBA,AAyBC,IAAA","file":"base.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by bohoffi on 30.05.2017.\r\n */\r\nimport {Airtable} from './airtable';\r\nimport {TableOptions} from '../interfaces';\r\nimport {Table} from './table';\r\n\r\nexport class Base {\r\n\r\n  private _baseId: string;\r\n  private _airtable: Airtable;\r\n\r\n  constructor(baseId: string, airtable: Airtable) {\r\n    if (!baseId) {\r\n      throw new Error('BaseId must be a non-empty string');\r\n    }\r\n\r\n    this._baseId = baseId;\r\n    this._airtable = airtable;\r\n  }\r\n\r\n  table(tableOptions: TableOptions): Table {\r\n    return new Table(tableOptions, this);\r\n  }\r\n\r\n  get baseId(): string {\r\n    return this._baseId;\r\n  }\r\n\r\n  get airtable(): Airtable {\r\n    return this._airtable;\r\n  }\r\n}\r\n"]}